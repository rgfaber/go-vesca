// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	domain "github.com/rgfaber/go-vesca/sdk/domain"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IEventHandler is an autogenerated mock type for the IEventHandler type
type IEventHandler struct {
	mock.Mock
}

// Activate provides a mock function with given fields:
func (_m *IEventHandler) Activate() {
	_m.Called()
}

// Subscribe provides a mock function with given fields: events, transactional
func (_m *IEventHandler) Subscribe(events chan domain.IEvt, transactional bool) {
	_m.Called(events, transactional)
}

// NewIEventHandler creates a new instance of IEventHandler. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIEventHandler(t testing.TB) *IEventHandler {
	mock := &IEventHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
