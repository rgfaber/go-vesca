// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/rgfaber/go-vesca/sdk/interfaces"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IHopeSerializer is an autogenerated mock type for the IHopeSerializer type
type IHopeSerializer struct {
	mock.Mock
}

// Serialize provides a mock function with given fields: fact
func (_m *IHopeSerializer) Serialize(fact interfaces.IHope) ([]byte, error) {
	ret := _m.Called(fact)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(interfaces.IHope) []byte); ok {
		r0 = rf(fact)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interfaces.IHope) error); ok {
		r1 = rf(fact)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIHopeSerializer creates a new instance of IHopeSerializer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIHopeSerializer(t testing.TB) *IHopeSerializer {
	mock := &IHopeSerializer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
