// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/rgfaber/go-vesca/sdk/interfaces"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IFbkSerializer is an autogenerated mock type for the IFbkSerializer type
type IFbkSerializer struct {
	mock.Mock
}

// Serialize provides a mock function with given fields: fbk
func (_m *IFbkSerializer) Serialize(fbk interfaces.IFbk) ([]byte, error) {
	ret := _m.Called(fbk)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(interfaces.IFbk) []byte); ok {
		r0 = rf(fbk)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interfaces.IFbk) error); ok {
		r1 = rf(fbk)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIFbkSerializer creates a new instance of IFbkSerializer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIFbkSerializer(t testing.TB) *IFbkSerializer {
	mock := &IFbkSerializer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
