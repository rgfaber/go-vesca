// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/rgfaber/go-vesca/sdk/interfaces"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IEventToFact is an autogenerated mock type for the IEventToFact type
type IEventToFact struct {
	mock.Mock
}

// Map provides a mock function with given fields: _a0
func (_m *IEventToFact) Map(_a0 interfaces.IEvt) interfaces.IFact {
	ret := _m.Called(_a0)

	var r0 interfaces.IFact
	if rf, ok := ret.Get(0).(func(interfaces.IEvt) interfaces.IFact); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.IFact)
		}
	}

	return r0
}

// NewIEventToFact creates a new instance of IEventToFact. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIEventToFact(t testing.TB) *IEventToFact {
	mock := &IEventToFact{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
