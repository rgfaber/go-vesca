// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// IStore is an autogenerated mock type for the IStore type
type IStore struct {
	mock.Mock
}

// Load provides a mock function with given fields: id
func (_m *IStore) Load(id string) interface{} {
	ret := _m.Called(id)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Save provides a mock function with given fields: id, model
func (_m *IStore) Save(id string, model interface{}) {
	_m.Called(id, model)
}

// NewIStore creates a new instance of IStore. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIStore(t testing.TB) *IStore {
	mock := &IStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
